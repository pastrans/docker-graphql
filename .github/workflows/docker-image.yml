name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
  
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code 
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version     #con esto tenemos acceso a todo el resultado del paso
      
    - name: Docker login
      env: 
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    
    - name: Build Docker Image 
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker buildx create --name mybuilder --bootstrap --use
        docker buildx use mybuilder 
        docker buildx build --output="type=image" --platform linux/amd64,linux/arm64 -t pastrans/docker-graphql:$NEW_VERSION .
        docker buildx build --output="type=image" --platform linux/amd64,linux/arm64 -t pastrans/docker-graphql:latest .
        docker image ls -a
    
    - name: Push Docker Image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker push pastrans/docker-graphql:$NEW_VERSION 
        docker push pastrans/docker-graphql:latest 




    
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
